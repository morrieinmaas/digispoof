# Default values for api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

config:
  registryBase: docker.io/conduction
  projectName: proto-component-commonground
  name: proto-component-commonground
  version: V1.0
  majorVersion: v1
  domain: conduction.nl
  subpathRouting: true
  env: dev
  web: false
  debug: 1
  cache: false
  id: 
  internal: false
  replicaCount: 1
  corsAllowOrigin: ['*']
  trustedHosts: '^.+$'
  pullPolicy: Always
  # You will need these proxies on kubernetes
  trustedProxies:
    - 10.0.0.0/8
    - 172.16.0.0/12
    - 192.168.0.0/16
  notificationEnabled: false
  audittrailEnabled: false
  authorisationEnabled: false
  healthEnabled: false
  archiveEnabled: false

security:
  applicationKey: "45c1a4b6-59d3-4a6e-86bf-88a872f35845"

php:
  repository: docker.io/conduction/protocomponent-php
  tag: latest
  env: prod
  secret: ""
  replicaCount: 2

redis:
  cluster:
    enabled: false
  redisPort: 6379
  usePassword: false
  enabled: false
  
commonground:
  eherkenning:
    location: https://conduction.nl/eherkenning
  digispoof:
    location: https://conduction.nl/digispoof

nginx:
  repository: docker.io/conduction/protocomponent-nginx
  tag: latest
  pullPolicy: Always
  replicaCount: 2

postgresql:
  enabled: true
  imageTag: 10-alpine
  # If bringing your own PostgreSQL, the full uri to use
  #url: pgsql://api-platform:!ChangeMe!@example.com/api?serverVersion=10.1
  postgresqlUsername: "example"
  postgresqlPassword: "!ChangeMe!"
  postgresqlDatabase: "api"
  # Persistent Volume Storage configuration.
  # ref: https://kubernetes.io/docs/user-guide/persistent-volumes
  persistence:
    enabled: true
  pullPolicy: IfNotPresent
#  image:
#    repository: postgres
#    tag: alpine

ingress:
  host: proto-component.local
  path: /api
  annotations:
    # kubernetes.io/ingress.global-static-ip-name: chart-ip
    # kubernetes.io/ingress.class: gce
    # kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespace, you can also use cert-manager.
    # - hosts:
      # - example.com
      # - mercure.example.com
  hosts:
    api:
      host: example.com
      serviceName: varnish
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi
